# -*- coding: utf-8 -*-
"""yolo8s  - feastapp dataset training

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/186D4fRCP8p7QDQnyFXFsfbA3gWji9b-4
"""

from google.colab import drive
drive.mount('/content/drive')

!nvidia-smi

!pip install ultralytics

!pip install tensorflow

from ultralytics import YOLO

from IPython import display
display.clear_output()

import ultralytics
ultralytics.checks()

# Importing the libraries
import numpy as np
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeight')
import pandas as pd
from sklearn.preprocessing import MinMaxScaler
from keras.models import Sequential
from keras.layers import Dense, LSTM, Dropout, GRU, Bidirectional
from keras.optimizers import SGD
import math
from sklearn.metrics import mean_squared_error

!pip install inference-sdk

!pip install ultralytics==8.0.196

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="wtUZB0PMcmnQH7DbbizF")
project = rf.workspace("feastapp").project("feastapp")
version = project.version(1)
dataset = version.download("yolov8")

from inference_sdk import InferenceHTTPClient

CLIENT = InferenceHTTPClient(
    api_url="https://detect.roboflow.com",
    api_key="wtUZB0PMcmnQH7DbbizF"
)

!pip install tensorflow-object-detection-api

ROOT_DIR = '/content/drive/MyDrive/feastappDataset'

# Load a model
model = YOLO('yolov8s.yaml')  # build a new model from YAML
model = YOLO('yolov8s.pt')  # load a pretrained model (recommended for training)
model = YOLO('yolov8s.yaml').load('yolov8s.pt')  # build from YAML and transfer weights

import os

results = model.train(data=os.path.join(ROOT_DIR, "data.yaml"), epochs=50)

import os

directory_path = '/content/runs/detect/train/'
os.makedirs(directory_path, exist_ok=True)